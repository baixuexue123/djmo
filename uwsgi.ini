# mysite_uwsgi.ini file
[uwsgi]

uid = nobody
gid = nobody
# 为每个工作进程设置请求数的上限,当一个工作进程处理的请求数达到这个值,那么该工作进程就会被回收重用(重启).可以使用这个选项来默默地对抗内存泄漏
max-requests = 2000
# plugin = python

# Django-related settings
# the base directory (full path)
chdir           = /home/baixue/100credit/CRM/src/crm/
# Django's wsgi file
wsgi-file = www/wsgi.py
# module          = www.wsgi:application
# the virtualenv (full path)
# home            = /path/to/env

# process-related settings
# master
master = true
# maximum number of worker processes
processes = 4
# theads = 2
# 允许用内嵌的语言启动线程,这将允许你在app程序中产生一个子线程
enable-threads = true
# the socket (use the full path to be safe)
socket = /home/baixue/100credit/CRM/src/crm.sock
# stats = 127.0.0.1:9191
# 使进程在后台运行,并将日志打到指定的日志文件或udp服务器
# daemonize = logs/uwsgi.log
# daemonize = 192.168.0.100:4000
# harakiri超时时间,如果一个请求花费的时间超过了这个harakiri超时时间，那么这个请求都会被丢弃,并且当前处理这个请求的工作进程会被回收再利用（即重启）
# harakiri = 60
# harakiri-verbose = true
# ... with appropriate permissions - may be needed
chmod-socket = 666
# clear environment on exit
vacuum = true